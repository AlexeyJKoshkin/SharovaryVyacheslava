//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class RAAnimationEntity {

    static readonly RoyalAxe.GameEntitas.HitTriggerComponent hitTriggerComponent = new RoyalAxe.GameEntitas.HitTriggerComponent();

    public bool isHitTrigger {
        get { return HasComponent(RAAnimationComponentsLookup.HitTrigger); }
        set {
            if (value != isHitTrigger) {
                var index = RAAnimationComponentsLookup.HitTrigger;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : hitTriggerComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class RAAnimationMatcher {

    static Entitas.IMatcher<RAAnimationEntity> _matcherHitTrigger;

    public static Entitas.IMatcher<RAAnimationEntity> HitTrigger {
        get {
            if (_matcherHitTrigger == null) {
                var matcher = (Entitas.Matcher<RAAnimationEntity>)Entitas.Matcher<RAAnimationEntity>.AllOf(RAAnimationComponentsLookup.HitTrigger);
                matcher.componentNames = RAAnimationComponentsLookup.componentNames;
                _matcherHitTrigger = matcher;
            }

            return _matcherHitTrigger;
        }
    }
}
