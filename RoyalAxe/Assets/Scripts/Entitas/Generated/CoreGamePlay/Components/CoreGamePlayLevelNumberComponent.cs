//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreGamePlayEntity {

    public RoyalAxe.GameEntitas.LevelNumberComponent levelNumber { get { return (RoyalAxe.GameEntitas.LevelNumberComponent)GetComponent(CoreGamePlayComponentsLookup.LevelNumber); } }
    public bool hasLevelNumber { get { return HasComponent(CoreGamePlayComponentsLookup.LevelNumber); } }

    public void AddLevelNumber(int newNumber) {
        var index = CoreGamePlayComponentsLookup.LevelNumber;
        var component = (RoyalAxe.GameEntitas.LevelNumberComponent)CreateComponent(index, typeof(RoyalAxe.GameEntitas.LevelNumberComponent));
        component.Number = newNumber;
        AddComponent(index, component);
    }

    public void ReplaceLevelNumber(int newNumber) {
        var index = CoreGamePlayComponentsLookup.LevelNumber;
        var component = (RoyalAxe.GameEntitas.LevelNumberComponent)CreateComponent(index, typeof(RoyalAxe.GameEntitas.LevelNumberComponent));
        component.Number = newNumber;
        ReplaceComponent(index, component);
    }

    public void RemoveLevelNumber() {
        RemoveComponent(CoreGamePlayComponentsLookup.LevelNumber);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CoreGamePlayMatcher {

    static Entitas.IMatcher<CoreGamePlayEntity> _matcherLevelNumber;

    public static Entitas.IMatcher<CoreGamePlayEntity> LevelNumber {
        get {
            if (_matcherLevelNumber == null) {
                var matcher = (Entitas.Matcher<CoreGamePlayEntity>)Entitas.Matcher<CoreGamePlayEntity>.AllOf(CoreGamePlayComponentsLookup.LevelNumber);
                matcher.componentNames = CoreGamePlayComponentsLookup.componentNames;
                _matcherLevelNumber = matcher;
            }

            return _matcherLevelNumber;
        }
    }
}
