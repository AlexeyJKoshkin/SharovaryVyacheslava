//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreGamePlayEntity {

    public ExperienceListenerComponent experienceListener { get { return (ExperienceListenerComponent)GetComponent(CoreGamePlayComponentsLookup.ExperienceListener); } }
    public bool hasExperienceListener { get { return HasComponent(CoreGamePlayComponentsLookup.ExperienceListener); } }

    public void AddExperienceListener(System.Collections.Generic.List<IExperienceListener> newValue) {
        var index = CoreGamePlayComponentsLookup.ExperienceListener;
        var component = (ExperienceListenerComponent)CreateComponent(index, typeof(ExperienceListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceExperienceListener(System.Collections.Generic.List<IExperienceListener> newValue) {
        var index = CoreGamePlayComponentsLookup.ExperienceListener;
        var component = (ExperienceListenerComponent)CreateComponent(index, typeof(ExperienceListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveExperienceListener() {
        RemoveComponent(CoreGamePlayComponentsLookup.ExperienceListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CoreGamePlayMatcher {

    static Entitas.IMatcher<CoreGamePlayEntity> _matcherExperienceListener;

    public static Entitas.IMatcher<CoreGamePlayEntity> ExperienceListener {
        get {
            if (_matcherExperienceListener == null) {
                var matcher = (Entitas.Matcher<CoreGamePlayEntity>)Entitas.Matcher<CoreGamePlayEntity>.AllOf(CoreGamePlayComponentsLookup.ExperienceListener);
                matcher.componentNames = CoreGamePlayComponentsLookup.componentNames;
                _matcherExperienceListener = matcher;
            }

            return _matcherExperienceListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreGamePlayEntity {

    public void AddExperienceListener(IExperienceListener value) {
        var listeners = hasExperienceListener
            ? experienceListener.value
            : new System.Collections.Generic.List<IExperienceListener>();
        listeners.Add(value);
        ReplaceExperienceListener(listeners);
    }

    public void RemoveExperienceListener(IExperienceListener value, bool removeComponentWhenEmpty = true) {
        var listeners = experienceListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveExperienceListener();
        } else {
            ReplaceExperienceListener(listeners);
        }
    }
}
