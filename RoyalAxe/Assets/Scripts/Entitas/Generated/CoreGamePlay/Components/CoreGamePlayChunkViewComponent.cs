//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreGamePlayEntity {

    public RoyalAxe.GameEntitas.ChunkViewComponent chunkView { get { return (RoyalAxe.GameEntitas.ChunkViewComponent)GetComponent(CoreGamePlayComponentsLookup.ChunkView); } }
    public bool hasChunkView { get { return HasComponent(CoreGamePlayComponentsLookup.ChunkView); } }

    public void AddChunkView(RoyalAxe.CoreLevel.LevelChunkView newView) {
        var index = CoreGamePlayComponentsLookup.ChunkView;
        var component = (RoyalAxe.GameEntitas.ChunkViewComponent)CreateComponent(index, typeof(RoyalAxe.GameEntitas.ChunkViewComponent));
        component.View = newView;
        AddComponent(index, component);
    }

    public void ReplaceChunkView(RoyalAxe.CoreLevel.LevelChunkView newView) {
        var index = CoreGamePlayComponentsLookup.ChunkView;
        var component = (RoyalAxe.GameEntitas.ChunkViewComponent)CreateComponent(index, typeof(RoyalAxe.GameEntitas.ChunkViewComponent));
        component.View = newView;
        ReplaceComponent(index, component);
    }

    public void RemoveChunkView() {
        RemoveComponent(CoreGamePlayComponentsLookup.ChunkView);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CoreGamePlayMatcher {

    static Entitas.IMatcher<CoreGamePlayEntity> _matcherChunkView;

    public static Entitas.IMatcher<CoreGamePlayEntity> ChunkView {
        get {
            if (_matcherChunkView == null) {
                var matcher = (Entitas.Matcher<CoreGamePlayEntity>)Entitas.Matcher<CoreGamePlayEntity>.AllOf(CoreGamePlayComponentsLookup.ChunkView);
                matcher.componentNames = CoreGamePlayComponentsLookup.componentNames;
                _matcherChunkView = matcher;
            }

            return _matcherChunkView;
        }
    }
}
