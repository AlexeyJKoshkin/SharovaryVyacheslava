//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameRootLoopContext {

    public GameRootLoopEntity cheatsEntity { get { return GetGroup(GameRootLoopMatcher.Cheats).GetSingleEntity(); } }

    public bool isCheats {
        get { return cheatsEntity != null; }
        set {
            var entity = cheatsEntity;
            if (value != (entity != null)) {
                if (value) {
                    CreateEntity().isCheats = true;
                } else {
                    entity.Destroy();
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameRootLoopEntity {

    static readonly RoyalAxe.GameEntitas.CheatsComponent cheatsComponent = new RoyalAxe.GameEntitas.CheatsComponent();

    public bool isCheats {
        get { return HasComponent(GameRootLoopComponentsLookup.Cheats); }
        set {
            if (value != isCheats) {
                var index = GameRootLoopComponentsLookup.Cheats;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : cheatsComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameRootLoopMatcher {

    static Entitas.IMatcher<GameRootLoopEntity> _matcherCheats;

    public static Entitas.IMatcher<GameRootLoopEntity> Cheats {
        get {
            if (_matcherCheats == null) {
                var matcher = (Entitas.Matcher<GameRootLoopEntity>)Entitas.Matcher<GameRootLoopEntity>.AllOf(GameRootLoopComponentsLookup.Cheats);
                matcher.componentNames = GameRootLoopComponentsLookup.componentNames;
                _matcherCheats = matcher;
            }

            return _matcherCheats;
        }
    }
}
