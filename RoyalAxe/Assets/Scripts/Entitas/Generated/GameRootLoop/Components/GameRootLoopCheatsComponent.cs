//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameRootLoopContext {

    public GameRootLoopEntity cheatsEntity { get { return GetGroup(GameRootLoopMatcher.Cheats).GetSingleEntity(); } }
    public RoyalAxe.GameEntitas.CheatsComponent cheats { get { return cheatsEntity.cheats; } }
    public bool hasCheats { get { return cheatsEntity != null; } }

    public GameRootLoopEntity SetCheats(RoyalAxe.CoreLevel.UltimateCheatSettings newCheatSettings) {
        if (hasCheats) {
            throw new Entitas.EntitasException("Could not set Cheats!\n" + this + " already has an entity with RoyalAxe.GameEntitas.CheatsComponent!",
                "You should check if the context already has a cheatsEntity before setting it or use context.ReplaceCheats().");
        }
        var entity = CreateEntity();
        entity.AddCheats(newCheatSettings);
        return entity;
    }

    public void ReplaceCheats(RoyalAxe.CoreLevel.UltimateCheatSettings newCheatSettings) {
        var entity = cheatsEntity;
        if (entity == null) {
            entity = SetCheats(newCheatSettings);
        } else {
            entity.ReplaceCheats(newCheatSettings);
        }
    }

    public void RemoveCheats() {
        cheatsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameRootLoopEntity {

    public RoyalAxe.GameEntitas.CheatsComponent cheats { get { return (RoyalAxe.GameEntitas.CheatsComponent)GetComponent(GameRootLoopComponentsLookup.Cheats); } }
    public bool hasCheats { get { return HasComponent(GameRootLoopComponentsLookup.Cheats); } }

    public void AddCheats(RoyalAxe.CoreLevel.UltimateCheatSettings newCheatSettings) {
        var index = GameRootLoopComponentsLookup.Cheats;
        var component = (RoyalAxe.GameEntitas.CheatsComponent)CreateComponent(index, typeof(RoyalAxe.GameEntitas.CheatsComponent));
        component.CheatSettings = newCheatSettings;
        AddComponent(index, component);
    }

    public void ReplaceCheats(RoyalAxe.CoreLevel.UltimateCheatSettings newCheatSettings) {
        var index = GameRootLoopComponentsLookup.Cheats;
        var component = (RoyalAxe.GameEntitas.CheatsComponent)CreateComponent(index, typeof(RoyalAxe.GameEntitas.CheatsComponent));
        component.CheatSettings = newCheatSettings;
        ReplaceComponent(index, component);
    }

    public void RemoveCheats() {
        RemoveComponent(GameRootLoopComponentsLookup.Cheats);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameRootLoopMatcher {

    static Entitas.IMatcher<GameRootLoopEntity> _matcherCheats;

    public static Entitas.IMatcher<GameRootLoopEntity> Cheats {
        get {
            if (_matcherCheats == null) {
                var matcher = (Entitas.Matcher<GameRootLoopEntity>)Entitas.Matcher<GameRootLoopEntity>.AllOf(GameRootLoopComponentsLookup.Cheats);
                matcher.componentNames = GameRootLoopComponentsLookup.componentNames;
                _matcherCheats = matcher;
            }

            return _matcherCheats;
        }
    }
}
