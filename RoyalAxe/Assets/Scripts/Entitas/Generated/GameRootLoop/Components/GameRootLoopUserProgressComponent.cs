//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameRootLoopContext {

    public GameRootLoopEntity userProgressEntity { get { return GetGroup(GameRootLoopMatcher.UserProgress).GetSingleEntity(); } }
    public RoyalAxe.GameEntitas.UserProgressComponent userProgress { get { return userProgressEntity.userProgress; } }
    public bool hasUserProgress { get { return userProgressEntity != null; } }

    public GameRootLoopEntity SetUserProgress(Core.UserProfile.UserProfileData newProfileData) {
        if (hasUserProgress) {
            throw new Entitas.EntitasException("Could not set UserProgress!\n" + this + " already has an entity with RoyalAxe.GameEntitas.UserProgressComponent!",
                "You should check if the context already has a userProgressEntity before setting it or use context.ReplaceUserProgress().");
        }
        var entity = CreateEntity();
        entity.AddUserProgress(newProfileData);
        return entity;
    }

    public void ReplaceUserProgress(Core.UserProfile.UserProfileData newProfileData) {
        var entity = userProgressEntity;
        if (entity == null) {
            entity = SetUserProgress(newProfileData);
        } else {
            entity.ReplaceUserProgress(newProfileData);
        }
    }

    public void RemoveUserProgress() {
        userProgressEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameRootLoopEntity {

    public RoyalAxe.GameEntitas.UserProgressComponent userProgress { get { return (RoyalAxe.GameEntitas.UserProgressComponent)GetComponent(GameRootLoopComponentsLookup.UserProgress); } }
    public bool hasUserProgress { get { return HasComponent(GameRootLoopComponentsLookup.UserProgress); } }

    public void AddUserProgress(Core.UserProfile.UserProfileData newProfileData) {
        var index = GameRootLoopComponentsLookup.UserProgress;
        var component = (RoyalAxe.GameEntitas.UserProgressComponent)CreateComponent(index, typeof(RoyalAxe.GameEntitas.UserProgressComponent));
        component.ProfileData = newProfileData;
        AddComponent(index, component);
    }

    public void ReplaceUserProgress(Core.UserProfile.UserProfileData newProfileData) {
        var index = GameRootLoopComponentsLookup.UserProgress;
        var component = (RoyalAxe.GameEntitas.UserProgressComponent)CreateComponent(index, typeof(RoyalAxe.GameEntitas.UserProgressComponent));
        component.ProfileData = newProfileData;
        ReplaceComponent(index, component);
    }

    public void RemoveUserProgress() {
        RemoveComponent(GameRootLoopComponentsLookup.UserProgress);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameRootLoopMatcher {

    static Entitas.IMatcher<GameRootLoopEntity> _matcherUserProgress;

    public static Entitas.IMatcher<GameRootLoopEntity> UserProgress {
        get {
            if (_matcherUserProgress == null) {
                var matcher = (Entitas.Matcher<GameRootLoopEntity>)Entitas.Matcher<GameRootLoopEntity>.AllOf(GameRootLoopComponentsLookup.UserProgress);
                matcher.componentNames = GameRootLoopComponentsLookup.componentNames;
                _matcherUserProgress = matcher;
            }

            return _matcherUserProgress;
        }
    }
}
