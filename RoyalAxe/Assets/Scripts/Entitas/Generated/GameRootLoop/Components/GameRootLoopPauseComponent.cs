//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameRootLoopEntity {

    static readonly RoyalAxe.GameEntitas.Timer.PauseComponent pauseComponent = new RoyalAxe.GameEntitas.Timer.PauseComponent();

    public bool isPause {
        get { return HasComponent(GameRootLoopComponentsLookup.Pause); }
        set {
            if (value != isPause) {
                var index = GameRootLoopComponentsLookup.Pause;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : pauseComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameRootLoopMatcher {

    static Entitas.IMatcher<GameRootLoopEntity> _matcherPause;

    public static Entitas.IMatcher<GameRootLoopEntity> Pause {
        get {
            if (_matcherPause == null) {
                var matcher = (Entitas.Matcher<GameRootLoopEntity>)Entitas.Matcher<GameRootLoopEntity>.AllOf(GameRootLoopComponentsLookup.Pause);
                matcher.componentNames = GameRootLoopComponentsLookup.componentNames;
                _matcherPause = matcher;
            }

            return _matcherPause;
        }
    }
}
