//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class SkillEntity {

    static readonly RoyalAxe.GameEntitas.SkillReadyComponent skillReadyComponent = new RoyalAxe.GameEntitas.SkillReadyComponent();

    public bool isSkillReady {
        get { return HasComponent(SkillComponentsLookup.SkillReady); }
        set {
            if (value != isSkillReady) {
                var index = SkillComponentsLookup.SkillReady;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : skillReadyComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class SkillMatcher {

    static Entitas.IMatcher<SkillEntity> _matcherSkillReady;

    public static Entitas.IMatcher<SkillEntity> SkillReady {
        get {
            if (_matcherSkillReady == null) {
                var matcher = (Entitas.Matcher<SkillEntity>)Entitas.Matcher<SkillEntity>.AllOf(SkillComponentsLookup.SkillReady);
                matcher.componentNames = SkillComponentsLookup.componentNames;
                _matcherSkillReady = matcher;
            }

            return _matcherSkillReady;
        }
    }
}
