//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class UnitsEntity {

    public RoyalAxe.GameEntitas.AttackSpeedComponent attackSpeed { get { return (RoyalAxe.GameEntitas.AttackSpeedComponent)GetComponent(UnitsComponentsLookup.AttackSpeed); } }
    public bool hasAttackSpeed { get { return HasComponent(UnitsComponentsLookup.AttackSpeed); } }

    public void AddAttackSpeed(RoyalAxe.Units.Stats.CharacterStatValue newUnitStatValue) {
        var index = UnitsComponentsLookup.AttackSpeed;
        var component = (RoyalAxe.GameEntitas.AttackSpeedComponent)CreateComponent(index, typeof(RoyalAxe.GameEntitas.AttackSpeedComponent));
        component.UnitStatValue = newUnitStatValue;
        AddComponent(index, component);
    }

    public void ReplaceAttackSpeed(RoyalAxe.Units.Stats.CharacterStatValue newUnitStatValue) {
        var index = UnitsComponentsLookup.AttackSpeed;
        var component = (RoyalAxe.GameEntitas.AttackSpeedComponent)CreateComponent(index, typeof(RoyalAxe.GameEntitas.AttackSpeedComponent));
        component.UnitStatValue = newUnitStatValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAttackSpeed() {
        RemoveComponent(UnitsComponentsLookup.AttackSpeed);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class UnitsMatcher {

    static Entitas.IMatcher<UnitsEntity> _matcherAttackSpeed;

    public static Entitas.IMatcher<UnitsEntity> AttackSpeed {
        get {
            if (_matcherAttackSpeed == null) {
                var matcher = (Entitas.Matcher<UnitsEntity>)Entitas.Matcher<UnitsEntity>.AllOf(UnitsComponentsLookup.AttackSpeed);
                matcher.componentNames = UnitsComponentsLookup.componentNames;
                _matcherAttackSpeed = matcher;
            }

            return _matcherAttackSpeed;
        }
    }
}
